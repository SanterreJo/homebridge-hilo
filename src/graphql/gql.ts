/* eslint-disable */
import * as types from './graphql';



/**
 * Map of all GraphQL operations in the project.
 *
 * This map has several performance disadvantages:
 * 1. It is not tree-shakeable, so it will include all operations in the project.
 * 2. It is not minifiable, so the string of a GraphQL query will be multiple times inside the bundle.
 * 3. It does not support dead code elimination, so it will add unused operations.
 *
 * Therefore it is highly recommended to use the babel or swc plugin for production.
 * Learn more about it here: https://the-guild.dev/graphql/codegen/plugins/presets/preset-client#reducing-bundle-size
 */
type Documents = {
    "\n  query getLocation($locationHiloId: String!) {\n    getLocation(id: $locationHiloId) {\n      hiloId\n      lastUpdate\n      lastUpdateVersion\n      devices {\n        __typename\n        deviceType\n        hiloId\n        physicalAddress\n        connectionStatus\n        ... on BasicSwitch {\n          deviceType\n          hiloId\n          physicalAddress\n          connectionStatus\n          state\n          power {\n            value\n            kind\n          }\n        }\n        ... on BasicLight {\n          deviceType\n          hiloId\n          physicalAddress\n          connectionStatus\n          state\n          hue\n          level\n          saturation\n          colorTemperature\n          lightType\n        }\n        ... on HeatingFloorThermostat {\n          deviceType\n          hiloId\n          physicalAddress\n          connectionStatus\n          ambientHumidity\n          gDState\n          version\n          zigbeeVersion\n          thermostatType\n          physicalAddress\n          floorMode\n          power {\n            value\n            kind\n          }\n          ambientTemperature {\n            value\n            kind\n          }\n          ambientTempSetpoint {\n            value\n            kind\n          }\n          maxAmbientTempSetpoint {\n            value\n            kind\n          }\n          minAmbientTempSetpoint {\n            value\n            kind\n          }\n          floorLimit {\n            value\n          }\n        }\n        ... on BasicDimmer {\n          deviceType\n          hiloId\n          physicalAddress\n          connectionStatus\n          state\n          level\n          power {\n            value\n            kind\n          }\n        }\n        ... on BasicThermostat {\n          deviceType\n          hiloId\n          physicalAddress\n          connectionStatus\n          ambientHumidity\n          gDState\n          version\n          zigbeeVersion\n          ambientTemperature {\n            value\n            kind\n          }\n          ambientTempSetpoint {\n            value\n            kind\n          }\n          maxAmbientTempSetpoint {\n            value\n            kind\n          }\n          minAmbientTempSetpoint {\n            value\n            kind\n          }\n          maxAmbientTempSetpointLimit {\n            value\n            kind\n          }\n          minAmbientTempSetpointLimit {\n            value\n            kind\n          }\n          heatDemand\n          power {\n            value\n            kind\n          }\n          mode\n          allowedModes\n        }\n      }\n    }\n  }\n": typeof types.GetLocationDocument,
    "\n  subscription onAnyDeviceUpdated($locationHiloId: String!) {\n    onAnyDeviceUpdated(locationHiloId: $locationHiloId) {\n      deviceType\n      locationHiloId\n      transmissionTime\n      operationId\n      status\n      device {\n        __typename\n        ... on BasicSwitch {\n          deviceType\n          hiloId\n          physicalAddress\n          connectionStatus\n          state\n          power {\n            value\n            kind\n          }\n        }\n        ... on BasicLight {\n          deviceType\n          hiloId\n          physicalAddress\n          connectionStatus\n          state\n          hue\n          level\n          saturation\n          colorTemperature\n          lightType\n        }\n        ... on HeatingFloorThermostat {\n          deviceType\n          hiloId\n          physicalAddress\n          connectionStatus\n          ambientHumidity\n          gDState\n          version\n          zigbeeVersion\n          thermostatType\n          physicalAddress\n          floorMode\n          power {\n            value\n            kind\n          }\n          ambientTemperature {\n            value\n            kind\n          }\n          ambientTempSetpoint {\n            value\n            kind\n          }\n          maxAmbientTempSetpoint {\n            value\n            kind\n          }\n          minAmbientTempSetpoint {\n            value\n            kind\n          }\n          floorLimit {\n            value\n          }\n        }\n        ... on BasicDimmer {\n          deviceType\n          hiloId\n          physicalAddress\n          connectionStatus\n          state\n          level\n          power {\n            value\n            kind\n          }\n        }\n        ... on BasicThermostat {\n          deviceType\n          hiloId\n          physicalAddress\n          connectionStatus\n          ambientHumidity\n          gDState\n          version\n          zigbeeVersion\n          ambientTemperature {\n            value\n            kind\n          }\n          ambientTempSetpoint {\n            value\n            kind\n          }\n          maxAmbientTempSetpoint {\n            value\n            kind\n          }\n          minAmbientTempSetpoint {\n            value\n            kind\n          }\n          maxAmbientTempSetpointLimit {\n            value\n            kind\n          }\n          minAmbientTempSetpointLimit {\n            value\n            kind\n          }\n          heatDemand\n          power {\n            value\n            kind\n          }\n          mode\n          allowedModes\n        }\n      }\n    }\n  }\n": typeof types.OnAnyDeviceUpdatedDocument,
};
const documents: Documents = {
    "\n  query getLocation($locationHiloId: String!) {\n    getLocation(id: $locationHiloId) {\n      hiloId\n      lastUpdate\n      lastUpdateVersion\n      devices {\n        __typename\n        deviceType\n        hiloId\n        physicalAddress\n        connectionStatus\n        ... on BasicSwitch {\n          deviceType\n          hiloId\n          physicalAddress\n          connectionStatus\n          state\n          power {\n            value\n            kind\n          }\n        }\n        ... on BasicLight {\n          deviceType\n          hiloId\n          physicalAddress\n          connectionStatus\n          state\n          hue\n          level\n          saturation\n          colorTemperature\n          lightType\n        }\n        ... on HeatingFloorThermostat {\n          deviceType\n          hiloId\n          physicalAddress\n          connectionStatus\n          ambientHumidity\n          gDState\n          version\n          zigbeeVersion\n          thermostatType\n          physicalAddress\n          floorMode\n          power {\n            value\n            kind\n          }\n          ambientTemperature {\n            value\n            kind\n          }\n          ambientTempSetpoint {\n            value\n            kind\n          }\n          maxAmbientTempSetpoint {\n            value\n            kind\n          }\n          minAmbientTempSetpoint {\n            value\n            kind\n          }\n          floorLimit {\n            value\n          }\n        }\n        ... on BasicDimmer {\n          deviceType\n          hiloId\n          physicalAddress\n          connectionStatus\n          state\n          level\n          power {\n            value\n            kind\n          }\n        }\n        ... on BasicThermostat {\n          deviceType\n          hiloId\n          physicalAddress\n          connectionStatus\n          ambientHumidity\n          gDState\n          version\n          zigbeeVersion\n          ambientTemperature {\n            value\n            kind\n          }\n          ambientTempSetpoint {\n            value\n            kind\n          }\n          maxAmbientTempSetpoint {\n            value\n            kind\n          }\n          minAmbientTempSetpoint {\n            value\n            kind\n          }\n          maxAmbientTempSetpointLimit {\n            value\n            kind\n          }\n          minAmbientTempSetpointLimit {\n            value\n            kind\n          }\n          heatDemand\n          power {\n            value\n            kind\n          }\n          mode\n          allowedModes\n        }\n      }\n    }\n  }\n": types.GetLocationDocument,
    "\n  subscription onAnyDeviceUpdated($locationHiloId: String!) {\n    onAnyDeviceUpdated(locationHiloId: $locationHiloId) {\n      deviceType\n      locationHiloId\n      transmissionTime\n      operationId\n      status\n      device {\n        __typename\n        ... on BasicSwitch {\n          deviceType\n          hiloId\n          physicalAddress\n          connectionStatus\n          state\n          power {\n            value\n            kind\n          }\n        }\n        ... on BasicLight {\n          deviceType\n          hiloId\n          physicalAddress\n          connectionStatus\n          state\n          hue\n          level\n          saturation\n          colorTemperature\n          lightType\n        }\n        ... on HeatingFloorThermostat {\n          deviceType\n          hiloId\n          physicalAddress\n          connectionStatus\n          ambientHumidity\n          gDState\n          version\n          zigbeeVersion\n          thermostatType\n          physicalAddress\n          floorMode\n          power {\n            value\n            kind\n          }\n          ambientTemperature {\n            value\n            kind\n          }\n          ambientTempSetpoint {\n            value\n            kind\n          }\n          maxAmbientTempSetpoint {\n            value\n            kind\n          }\n          minAmbientTempSetpoint {\n            value\n            kind\n          }\n          floorLimit {\n            value\n          }\n        }\n        ... on BasicDimmer {\n          deviceType\n          hiloId\n          physicalAddress\n          connectionStatus\n          state\n          level\n          power {\n            value\n            kind\n          }\n        }\n        ... on BasicThermostat {\n          deviceType\n          hiloId\n          physicalAddress\n          connectionStatus\n          ambientHumidity\n          gDState\n          version\n          zigbeeVersion\n          ambientTemperature {\n            value\n            kind\n          }\n          ambientTempSetpoint {\n            value\n            kind\n          }\n          maxAmbientTempSetpoint {\n            value\n            kind\n          }\n          minAmbientTempSetpoint {\n            value\n            kind\n          }\n          maxAmbientTempSetpointLimit {\n            value\n            kind\n          }\n          minAmbientTempSetpointLimit {\n            value\n            kind\n          }\n          heatDemand\n          power {\n            value\n            kind\n          }\n          mode\n          allowedModes\n        }\n      }\n    }\n  }\n": types.OnAnyDeviceUpdatedDocument,
};

/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  query getLocation($locationHiloId: String!) {\n    getLocation(id: $locationHiloId) {\n      hiloId\n      lastUpdate\n      lastUpdateVersion\n      devices {\n        __typename\n        deviceType\n        hiloId\n        physicalAddress\n        connectionStatus\n        ... on BasicSwitch {\n          deviceType\n          hiloId\n          physicalAddress\n          connectionStatus\n          state\n          power {\n            value\n            kind\n          }\n        }\n        ... on BasicLight {\n          deviceType\n          hiloId\n          physicalAddress\n          connectionStatus\n          state\n          hue\n          level\n          saturation\n          colorTemperature\n          lightType\n        }\n        ... on HeatingFloorThermostat {\n          deviceType\n          hiloId\n          physicalAddress\n          connectionStatus\n          ambientHumidity\n          gDState\n          version\n          zigbeeVersion\n          thermostatType\n          physicalAddress\n          floorMode\n          power {\n            value\n            kind\n          }\n          ambientTemperature {\n            value\n            kind\n          }\n          ambientTempSetpoint {\n            value\n            kind\n          }\n          maxAmbientTempSetpoint {\n            value\n            kind\n          }\n          minAmbientTempSetpoint {\n            value\n            kind\n          }\n          floorLimit {\n            value\n          }\n        }\n        ... on BasicDimmer {\n          deviceType\n          hiloId\n          physicalAddress\n          connectionStatus\n          state\n          level\n          power {\n            value\n            kind\n          }\n        }\n        ... on BasicThermostat {\n          deviceType\n          hiloId\n          physicalAddress\n          connectionStatus\n          ambientHumidity\n          gDState\n          version\n          zigbeeVersion\n          ambientTemperature {\n            value\n            kind\n          }\n          ambientTempSetpoint {\n            value\n            kind\n          }\n          maxAmbientTempSetpoint {\n            value\n            kind\n          }\n          minAmbientTempSetpoint {\n            value\n            kind\n          }\n          maxAmbientTempSetpointLimit {\n            value\n            kind\n          }\n          minAmbientTempSetpointLimit {\n            value\n            kind\n          }\n          heatDemand\n          power {\n            value\n            kind\n          }\n          mode\n          allowedModes\n        }\n      }\n    }\n  }\n"): typeof import('./graphql').GetLocationDocument;
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  subscription onAnyDeviceUpdated($locationHiloId: String!) {\n    onAnyDeviceUpdated(locationHiloId: $locationHiloId) {\n      deviceType\n      locationHiloId\n      transmissionTime\n      operationId\n      status\n      device {\n        __typename\n        ... on BasicSwitch {\n          deviceType\n          hiloId\n          physicalAddress\n          connectionStatus\n          state\n          power {\n            value\n            kind\n          }\n        }\n        ... on BasicLight {\n          deviceType\n          hiloId\n          physicalAddress\n          connectionStatus\n          state\n          hue\n          level\n          saturation\n          colorTemperature\n          lightType\n        }\n        ... on HeatingFloorThermostat {\n          deviceType\n          hiloId\n          physicalAddress\n          connectionStatus\n          ambientHumidity\n          gDState\n          version\n          zigbeeVersion\n          thermostatType\n          physicalAddress\n          floorMode\n          power {\n            value\n            kind\n          }\n          ambientTemperature {\n            value\n            kind\n          }\n          ambientTempSetpoint {\n            value\n            kind\n          }\n          maxAmbientTempSetpoint {\n            value\n            kind\n          }\n          minAmbientTempSetpoint {\n            value\n            kind\n          }\n          floorLimit {\n            value\n          }\n        }\n        ... on BasicDimmer {\n          deviceType\n          hiloId\n          physicalAddress\n          connectionStatus\n          state\n          level\n          power {\n            value\n            kind\n          }\n        }\n        ... on BasicThermostat {\n          deviceType\n          hiloId\n          physicalAddress\n          connectionStatus\n          ambientHumidity\n          gDState\n          version\n          zigbeeVersion\n          ambientTemperature {\n            value\n            kind\n          }\n          ambientTempSetpoint {\n            value\n            kind\n          }\n          maxAmbientTempSetpoint {\n            value\n            kind\n          }\n          minAmbientTempSetpoint {\n            value\n            kind\n          }\n          maxAmbientTempSetpointLimit {\n            value\n            kind\n          }\n          minAmbientTempSetpointLimit {\n            value\n            kind\n          }\n          heatDemand\n          power {\n            value\n            kind\n          }\n          mode\n          allowedModes\n        }\n      }\n    }\n  }\n"): typeof import('./graphql').OnAnyDeviceUpdatedDocument;


export function graphql(source: string) {
  return (documents as any)[source] ?? {};
}
